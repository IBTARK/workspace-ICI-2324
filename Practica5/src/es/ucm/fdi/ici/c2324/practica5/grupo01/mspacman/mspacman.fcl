FUNCTION_BLOCK FuzzyMsPacMan	// Block definition (there may be more than one block per file)

VAR_INPUT				// Define input variables
	ppillDistance : REAL;
	combo : REAL;
	numPills : REAL;
	nearestPPillBlocked : REAL;
	nearestEdibleDist : REAL;
	nearestChasingDist : REAL;
	nearestChasingDist2 : REAL;
	nearestEdibleNextJunctionDist : REAL;
	distOfNearestEdibleToHisNextJunction : REAL;
END_VAR

VAR_OUTPUT				// Define output variable
	ActBuscarPills : REAL;
	ActEvitarPPill : REAL;
	ActFlanquearFantasma : REAL;
	ActHuirDeFantasma : REAL;
	ActHuirHaciaPPill : REAL;
	ActHuirRodeandoPPill : REAL;
	ActHuirVariosFantasmas : REAL;
	ActKamikazeAPill : REAL;
	ActKamikazeFantasma : REAL;
	ActPerseguirFantasma : REAL;
END_VAR

FUZZIFY ppillDistance	
	TERM near := (0, 1) (20, 0); 
	TERM medium := (0, 0) (20, 1) (30, 0) ;
	TERM far := (20, 0) (60, 1);
END_FUZZIFY
FUZZIFY combo			
	TERM few := (0, 1) (800, 0)
	TERM lot := (200, 0) (800, 1) 
END_FUZZIFY
FUZZIFY numPills			
	TERM few := (0, 1) (20, 0) ; 
	TERM lot := (0,0) (20, 1);
END_FUZZIFY
FUZZIFY nearestPPillBlocked		
	TERM true := (0, 1);
	TERM false := (0, 0);
END_FUZZIFY

FUZZIFY nearestEdibleDist		
	TERM near := (0, 1) (30, 0); 
	TERM medium := (0, 0) (30, 1) (40, 0);
	TERM far := (30, 0) (70, 1);
END_FUZZIFY
FUZZIFY nearestChasingDist
	TERM near := (0, 1) (5, 1) (30, 0); 
	TERM medium := (20, 0) (40, 1) (60, 0);
	TERM far := (50, 0) (70, 1);
END_FUZZIFY
FUZZIFY nearestChasingDist2		
	TERM near :=  (0, 1) (5, 1) (30, 0);
	TERM medium := (20, 0) (40, 1) (60, 0);
	TERM far := (50, 0) (70, 1);
END_FUZZIFY
FUZZIFY nearestEdibleNextJunctionDist			
	TERM near := (0, 1) (20, 0); 
	TERM medium := (10, 0) (30, 1);
	TERM far := (20, 0) (45, 1);
END_FUZZIFY
FUZZIFY distOfNearestEdibleToHisNextJunction
	TERM near := (0, 1) (20, 0); 
	TERM medium := (10, 0) (30, 1);
	TERM far := (20, 0) (45, 1);
END_FUZZIFY

DEFUZZIFY ActBuscarPills			// Defzzzify output variable 'tip' : {'cheap', 'average', 'generous' }
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActEvitarPPill
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActFlanquearFantasma	
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActHuirDeFantasma	
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActHuirHaciaPPill	
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActHuirRodeandoPPill	
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActKamikazeAPill
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActKamikazeFantasma
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY

DEFUZZIFY ActPerseguirFantasma
	TERM calm := (0,1) (5,1) (15,0);
	TERM nervious := gauss 15 5;
	TERM emergency := (15,0) (25,1) (30,1);
	METHOD : COG;		// Use 'Center Of Gravity' defuzzification method
	DEFAULT := 0;		// Default value is 0 (if no rule activates defuzzifier)
END_DEFUZZIFY


RULEBLOCK MsPacManRules
	AND : MIN;			// Use 'min' for 'and' (also implicit use 'max' for 'or' to fulfill DeMorgan's Law)
	ACT : MIN;			// Use 'min' activation method
	ACCU : MAX;			// Use 'MAX' accumulation method (Other options PROBOR and SUM)

	RULE 1 : IF BLINKYdistance IS near AND BLINKYconfidence IS high THEN Runaway IS emergency;
	RULE 2 : IF PINKYdistance IS near AND PINKYconfidence IS high THEN Runaway IS emergency;
	RULE 3 : IF INKYdistance IS near AND INKYconfidence IS high THEN Runaway IS emergency;
	RULE 4 : IF SUEdistance IS near AND SUEconfidence IS high THEN Runaway IS emergency;
	RULE 5 : IF BLINKYconfidence IS medium THEN GoToPPill IS nervious;
	RULE 6 : IF PINKYconfidence IS medium THEN GoToPPill IS nervious;
	RULE 7 : IF INKYconfidence IS medium THEN GoToPPill IS nervious;
	RULE 8 : IF SUEconfidence IS medium THEN GoToPPill IS nervious;
	RULE 9 : IF BLINKYdistance IS far THEN Runaway IS calm;
	RULE 10 : IF PINKYdistance IS far THEN Runaway IS calm;
	RULE 11 : IF INKYdistance IS far THEN Runaway IS calm;
	RULE 12 : IF SUEdistance IS far THEN Runaway IS calm;
END_RULEBLOCK

END_FUNCTION_BLOCK

